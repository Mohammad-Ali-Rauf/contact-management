{"ast":null,"code":"import { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return {\n        ...state,\n        contacts: action.payload,\n        loading: false\n      };\n    case ADD_CONTACT:\n      return {\n        ...state,\n        contacts: [...state.contacts, action.payload]\n      };\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.map(contact => contact._id === action.payload._id ? action.payload : contact)\n      };\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(contact => contact._id !== action.payload)\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null\n      };\n    case FILTER_CONTACTS:\n      return {\n        ...state,\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return contact.name.match(regex) || contact.email.match(regex);\n        })\n      };\n    case CLEAR_CONTACTS:\n      return {\n        ...state,\n        contacts: null,\n        filtered: null,\n        error: null,\n        current: null\n      };\n    case CLEAR_FILTER:\n      return {\n        ...state,\n        filtered: null\n      };\n    case CONTACT_ERROR:\n      return {\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","state","action","type","contacts","payload","loading","map","contact","_id","filter","current","filtered","regex","RegExp","name","match","email","error"],"sources":["/home/ali/Documents/contact-management/client/src/context/contact/contactReducer.js"],"sourcesContent":["import {\n    GET_CONTACTS,\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACTS,\n    CLEAR_CONTACTS,\n    CLEAR_FILTER,\n    CONTACT_ERROR\n} from '../types';\n\nexport default (state, action) => {\n    switch(action.type) {\n        case GET_CONTACTS:\n            return {\n                ...state,\n                contacts: action.payload,\n                loading: false\n            }\n        case ADD_CONTACT:\n            return {\n                ...state,\n                contacts: [...state.contacts, action.payload]\n            }\n        case UPDATE_CONTACT:\n            return {\n                ...state,\n                contacts: state.contacts.map(contact => contact._id === action.payload._id ? action.payload : contact)\n            }\n        case DELETE_CONTACT:\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact => contact._id !== action.payload)\n            }\n        case SET_CURRENT:\n            return {\n                ...state,\n                current: action.payload\n            }\n        case CLEAR_CURRENT:\n            return {\n                ...state,\n                current: null\n            }\n        case FILTER_CONTACTS:\n            return {\n                ...state,\n                filtered: state.contacts.filter(contact => {\n                    const regex = new RegExp(`${action.payload}`, 'gi');\n                    return contact.name.match(regex) || contact.email.match(regex);\n                })\n            }\n        case CLEAR_CONTACTS:\n            return {\n                ...state,\n                contacts: null,\n                filtered: null,\n                error: null,\n                current: null\n            }\n        case CLEAR_FILTER:\n            return {\n                ...state,\n                filtered: null\n            }\n        case CONTACT_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            }\n        default:\n            return state;\n    }\n}"],"mappings":"AAAA,SACIA,YAAY,EACZC,WAAW,EACXC,cAAc,EACdC,WAAW,EACXC,aAAa,EACbC,cAAc,EACdC,eAAe,EACfC,cAAc,EACdC,YAAY,EACZC,aAAa,QACV,UAAU;AAEjB,gBAAe,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC9B,QAAOA,MAAM,CAACC,IAAI;IACd,KAAKZ,YAAY;MACb,OAAO;QACH,GAAGU,KAAK;QACRG,QAAQ,EAAEF,MAAM,CAACG,OAAO;QACxBC,OAAO,EAAE;MACb,CAAC;IACL,KAAKd,WAAW;MACZ,OAAO;QACH,GAAGS,KAAK;QACRG,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAQ,EAAEF,MAAM,CAACG,OAAO;MAChD,CAAC;IACL,KAAKT,cAAc;MACf,OAAO;QACH,GAAGK,KAAK;QACRG,QAAQ,EAAEH,KAAK,CAACG,QAAQ,CAACG,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACC,GAAG,KAAKP,MAAM,CAACG,OAAO,CAACI,GAAG,GAAGP,MAAM,CAACG,OAAO,GAAGG,OAAO;MACzG,CAAC;IACL,KAAKf,cAAc;MACf,OAAO;QACH,GAAGQ,KAAK;QACRG,QAAQ,EAAEH,KAAK,CAACG,QAAQ,CAACM,MAAM,CAACF,OAAO,IAAIA,OAAO,CAACC,GAAG,KAAKP,MAAM,CAACG,OAAO;MAC7E,CAAC;IACL,KAAKX,WAAW;MACZ,OAAO;QACH,GAAGO,KAAK;QACRU,OAAO,EAAET,MAAM,CAACG;MACpB,CAAC;IACL,KAAKV,aAAa;MACd,OAAO;QACH,GAAGM,KAAK;QACRU,OAAO,EAAE;MACb,CAAC;IACL,KAAKd,eAAe;MAChB,OAAO;QACH,GAAGI,KAAK;QACRW,QAAQ,EAAEX,KAAK,CAACG,QAAQ,CAACM,MAAM,CAACF,OAAO,IAAI;UACvC,MAAMK,KAAK,GAAG,IAAIC,MAAM,CAAE,GAAEZ,MAAM,CAACG,OAAQ,EAAC,EAAE,IAAI,CAAC;UACnD,OAAOG,OAAO,CAACO,IAAI,CAACC,KAAK,CAACH,KAAK,CAAC,IAAIL,OAAO,CAACS,KAAK,CAACD,KAAK,CAACH,KAAK,CAAC;QAClE,CAAC;MACL,CAAC;IACL,KAAKf,cAAc;MACf,OAAO;QACH,GAAGG,KAAK;QACRG,QAAQ,EAAE,IAAI;QACdQ,QAAQ,EAAE,IAAI;QACdM,KAAK,EAAE,IAAI;QACXP,OAAO,EAAE;MACb,CAAC;IACL,KAAKZ,YAAY;MACb,OAAO;QACH,GAAGE,KAAK;QACRW,QAAQ,EAAE;MACd,CAAC;IACL,KAAKZ,aAAa;MACd,OAAO;QACH,GAAGC,KAAK;QACRiB,KAAK,EAAEhB,MAAM,CAACG;MAClB,CAAC;IACL;MACI,OAAOJ,KAAK;EACpB;AACJ,CAAC"},"metadata":{},"sourceType":"module"}