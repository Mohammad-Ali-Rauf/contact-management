{"ast":null,"code":"var _jsxFileName = \"/home/ali/Documents/contact-management/client/src/context/contact/ContactState.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport contactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactState = props => {\n  _s();\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  // Get Contacts\n  const getContacts = async () => {\n    try {\n      const res = await axios.get('/api/contacts');\n      dispatch({\n        type: GET_CONTACTS,\n        payload: res.data\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // Add Contact\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // Delete Contact\n  const deleteContact = async id => {\n    try {\n      await axios.delete(`/api/contacts/${id}`);\n      dispatch({\n        type: DELETE_CONTACT,\n        payload: id\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // Set Current Contact\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  };\n\n  // Clear Current Contact\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  };\n\n  // Update Contact\n  const updateContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    try {\n      const res = await axios.put(`/api/contacts/${contact._id}`, contact, config);\n      dispatch({\n        type: UPDATE_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // Filter Contacts\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  };\n\n  // Clear Contacts\n  const clearContacts = () => {\n    dispatch({\n      type: CLEAR_CONTACTS\n    });\n  };\n\n  // Clear Filter\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(contactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      addContact,\n      updateContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      filterContacts,\n      clearFilter,\n      getContacts,\n      clearContacts\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n};\n_s(ContactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = ContactState;\nexport default ContactState;\nvar _c;\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"names":["React","useReducer","axios","contactContext","contactReducer","GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","jsxDEV","_jsxDEV","ContactState","props","_s","initialState","contacts","current","filtered","error","state","dispatch","getContacts","res","get","type","payload","data","err","console","log","addContact","contact","config","headers","post","deleteContact","id","delete","setCurrent","clearCurrent","updateContact","put","_id","filterContacts","text","clearContacts","clearFilter","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ali/Documents/contact-management/client/src/context/contact/ContactState.js"],"sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport contactContext from './contactContext';\nimport contactReducer from './contactReducer';\n\nimport {\n    GET_CONTACTS,\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACTS,\n    CLEAR_CONTACTS,\n    CLEAR_FILTER,\n    CONTACT_ERROR\n} from '../types';\n\nconst ContactState = props => {\n    const initialState = {\n        contacts: null,\n        current: null,\n        filtered: null,\n        error: null\n    }\n\n    const [state, dispatch] = useReducer(contactReducer, initialState);\n\n    // Get Contacts\n    const getContacts = async () => {\n        try {\n            const res = await axios.get('/api/contacts');\n            dispatch({ type: GET_CONTACTS, payload: res.data });\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    // Add Contact\n    const addContact = async contact => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        try {\n            const res = await axios.post('/api/contacts', contact, config);\n            dispatch({ type: ADD_CONTACT, payload: res.data });\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    // Delete Contact\n    const deleteContact = async id => {\n        try {\n            await axios.delete(`/api/contacts/${id}`);\n            dispatch({ type: DELETE_CONTACT, payload: id });\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    // Set Current Contact\n    const setCurrent = contact => {\n        dispatch({ type: SET_CURRENT, payload: contact })\n    }\n\n    // Clear Current Contact\n    const clearCurrent = () => {\n        dispatch({ type: CLEAR_CURRENT })\n    }\n\n    // Update Contact\n    const updateContact = async contact => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        try {\n            const res = await axios.put(`/api/contacts/${contact._id}`, contact, config);\n            dispatch({ type: UPDATE_CONTACT, payload: res.data });\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    // Filter Contacts\n    const filterContacts = text => {\n        dispatch({ type: FILTER_CONTACTS, payload: text })\n    }\n\n    // Clear Contacts\n    const clearContacts = () => {\n        dispatch({ type: CLEAR_CONTACTS });\n    }\n\n    // Clear Filter\n    const clearFilter = () => {\n        dispatch({ type: CLEAR_FILTER })\n    }\n\n    return (\n        <contactContext.Provider\n            value={{\n                        contacts: state.contacts,\n                        current: state.current,\n                        filtered: state.filtered,\n                        error: state.error,\n                        addContact,\n                        updateContact,\n                        deleteContact,\n                        setCurrent,\n                        clearCurrent,\n                        filterContacts,\n                        clearFilter,\n                        getContacts,\n                        clearContacts\n                    }}\n        >\n            {props.children}\n        </contactContext.Provider>\n    )\n}\n\nexport default ContactState;"],"mappings":"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"},"metadata":{},"sourceType":"module"}