{"ast":null,"code":"import React,{useReducer}from'react';import axios from'axios';import contactContext from'./contactContext';import contactReducer from'./contactReducer';import{GET_CONTACTS,ADD_CONTACT,DELETE_CONTACT,SET_CURRENT,CLEAR_CURRENT,UPDATE_CONTACT,FILTER_CONTACTS,CLEAR_CONTACTS,CLEAR_FILTER,CONTACT_ERROR}from'../types';import{jsx as _jsx}from\"react/jsx-runtime\";const ContactState=props=>{const initialState={contacts:null,current:null,filtered:null,error:null};const[state,dispatch]=useReducer(contactReducer,initialState);// Get Contacts\nconst getContacts=async()=>{try{const res=await axios.get('/api/contacts');dispatch({type:GET_CONTACTS,payload:res.data});}catch(err){console.log(err);}};// Add Contact\nconst addContact=async contact=>{const config={headers:{'Content-Type':'application/json'}};try{const res=await axios.post('/api/contacts',contact,config);dispatch({type:ADD_CONTACT,payload:res.data});}catch(err){console.log(err);}};// Delete Contact\nconst deleteContact=async id=>{try{await axios.delete(\"/api/contacts/\".concat(id));dispatch({type:DELETE_CONTACT,payload:id});}catch(err){console.log(err);}};// Set Current Contact\nconst setCurrent=contact=>{dispatch({type:SET_CURRENT,payload:contact});};// Clear Current Contact\nconst clearCurrent=()=>{dispatch({type:CLEAR_CURRENT});};// Update Contact\nconst updateContact=async contact=>{const config={headers:{'Content-Type':'application/json'}};try{const res=await axios.put(\"/api/contacts/\".concat(contact._id),contact,config);dispatch({type:UPDATE_CONTACT,payload:res.data});}catch(err){console.log(err);}};// Filter Contacts\nconst filterContacts=text=>{dispatch({type:FILTER_CONTACTS,payload:text});};// Clear Contacts\nconst clearContacts=()=>{dispatch({type:CLEAR_CONTACTS});};// Clear Filter\nconst clearFilter=()=>{dispatch({type:CLEAR_FILTER});};return/*#__PURE__*/_jsx(contactContext.Provider,{value:{contacts:state.contacts,current:state.current,filtered:state.filtered,error:state.error,addContact,updateContact,deleteContact,setCurrent,clearCurrent,filterContacts,clearFilter,getContacts,clearContacts},children:props.children});};export default ContactState;","map":{"version":3,"names":["React","useReducer","axios","contactContext","contactReducer","GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","jsx","_jsx","ContactState","props","initialState","contacts","current","filtered","error","state","dispatch","getContacts","res","get","type","payload","data","err","console","log","addContact","contact","config","headers","post","deleteContact","id","delete","concat","setCurrent","clearCurrent","updateContact","put","_id","filterContacts","text","clearContacts","clearFilter","Provider","value","children"],"sources":["/home/ali/Documents/contact-management/client/src/context/contact/ContactState.js"],"sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport contactContext from './contactContext';\nimport contactReducer from './contactReducer';\n\nimport {\n    GET_CONTACTS,\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACTS,\n    CLEAR_CONTACTS,\n    CLEAR_FILTER,\n    CONTACT_ERROR\n} from '../types';\n\nconst ContactState = props => {\n    const initialState = {\n        contacts: null,\n        current: null,\n        filtered: null,\n        error: null\n    }\n\n    const [state, dispatch] = useReducer(contactReducer, initialState);\n\n    // Get Contacts\n    const getContacts = async () => {\n        try {\n            const res = await axios.get('/api/contacts');\n            dispatch({ type: GET_CONTACTS, payload: res.data });\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    // Add Contact\n    const addContact = async contact => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        try {\n            const res = await axios.post('/api/contacts', contact, config);\n            dispatch({ type: ADD_CONTACT, payload: res.data });\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    // Delete Contact\n    const deleteContact = async id => {\n        try {\n            await axios.delete(`/api/contacts/${id}`);\n            dispatch({ type: DELETE_CONTACT, payload: id });\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    // Set Current Contact\n    const setCurrent = contact => {\n        dispatch({ type: SET_CURRENT, payload: contact })\n    }\n\n    // Clear Current Contact\n    const clearCurrent = () => {\n        dispatch({ type: CLEAR_CURRENT })\n    }\n\n    // Update Contact\n    const updateContact = async contact => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        try {\n            const res = await axios.put(`/api/contacts/${contact._id}`, contact, config);\n            dispatch({ type: UPDATE_CONTACT, payload: res.data });\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    // Filter Contacts\n    const filterContacts = text => {\n        dispatch({ type: FILTER_CONTACTS, payload: text })\n    }\n\n    // Clear Contacts\n    const clearContacts = () => {\n        dispatch({ type: CLEAR_CONTACTS });\n    }\n\n    // Clear Filter\n    const clearFilter = () => {\n        dispatch({ type: CLEAR_FILTER })\n    }\n\n    return (\n        <contactContext.Provider\n            value={{\n                        contacts: state.contacts,\n                        current: state.current,\n                        filtered: state.filtered,\n                        error: state.error,\n                        addContact,\n                        updateContact,\n                        deleteContact,\n                        setCurrent,\n                        clearCurrent,\n                        filterContacts,\n                        clearFilter,\n                        getContacts,\n                        clearContacts\n                    }}\n        >\n            {props.children}\n        </contactContext.Provider>\n    )\n}\n\nexport default ContactState;"],"mappings":"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"},"metadata":{},"sourceType":"module"}